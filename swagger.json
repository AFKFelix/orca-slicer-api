{
  "openapi": "3.0.3",
  "info": {
    "title": "OrcaSlicer API",
    "version": "1.0.0",
    "description": "REST API for slicing 3D models and managing slicing profiles."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/slice": {
      "post": {
        "summary": "Slice a 3D model file",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "printer",
                  "preset",
                  "filament",
                  "bedType"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "STL, STEP, or 3MF model file"
                  },
                  "printer": {
                    "type": "string",
                    "description": "Printer profile name"
                  },
                  "preset": {
                    "type": "string",
                    "description": "Preset profile name"
                  },
                  "filament": {
                    "type": "string",
                    "description": "Filament profile name"
                  },
                  "bedType": {
                    "type": "string",
                    "description": "Bed type as named inside the profile (usually Textured PEI Plate, Textured Cool Plate, ...)"
                  },
                  "allPlates": {
                    "type": "boolean",
                    "description": "If true, slice all plates in the 3mf file (optional)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "G-code file generated. If multiple G-code files are generated, a ZIP archive is returned.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "gcodeFile": {
                    "summary": "Example G-code file",
                    "description": "A sample G-code file generated by the slicer.",
                    "value": "G28 ; Home all axes\n..."
                  },
                  "zipFile": {
                    "summary": "Example ZIP file",
                    "description": "A ZIP archive containing multiple G-code files.",
                    "value": "<binary zip data>"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Slicing failed or server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{category}": {
      "post": {
        "summary": "Upload a profile (printer, preset, or filament)",
        "parameters": [
          {
            "$ref": "#/components/parameters/Category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["file", "name"],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "OrcaSlicer profile JSON file"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name for the profile (alphanumeric)"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profile uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or missing parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List all profiles in a category",
        "parameters": [
          {
            "$ref": "#/components/parameters/Category"
          }
        ],
        "responses": {
          "200": {
            "description": "List of profile names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{category}/{name}": {
      "get": {
        "summary": "Get a specific profile by name",
        "parameters": [
          {
            "$ref": "#/components/parameters/Category"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Profile name (alphanumeric)"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Category": {
        "name": "category",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "enum": ["printers", "presets", "filaments"]
        },
        "description": "Profile category"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
